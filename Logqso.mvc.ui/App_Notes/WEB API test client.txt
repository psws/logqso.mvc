WebApiTestClient (readme.md)
//https://github.com/matthewcv/WebApiTestClient
For ASP.Net Web API projects. Use to automatically generate a UI in the browser for testing the APIs. 
•Good for quickly testing your APIs as you develop them
•Good for QA teams that need to test your API 
•Good for using web app automation tools like web driver or phantomjs for testing the API

How to use:
1.Install the matthewcv.WebApiTestClient NuGet package into your Web API Project.
2.If it's not already there, install the Microsoft.AspNet.WebApi.HelpPage NuGet Package.
3.In your web app under /Ares/HelpPage/Views/Help there should be a view called Api.cshtml. Add this code to the bottom of that file: 
  @section scripts { <script type="text/javascript" src="/Scripts/WebApiTestClient.js"></script> }  
 Pay careful attention to the src attribute in that script element there. If your API project is not at the root of the web host, you'll need to adjust it.

4.Register the route. In your Global.asax or where ever you register your routes add this line:  
WebApiTestClient.WebApiTestClientHttpMessageHandler.RegisterRouteForTestClient(GlobalConfiguration.Configuration);
 . This route must be registered first before any other routes.

5.Browse to one of the generated Help pages for an API. 
The WebApiTestClient will initialize automatically and after a moment you will see a "Test this API" link at the bottom rigt of the window if you click it, a UI will be generated that matches the inputs for that API. Fill them in and click the 'send request' button.

•it uses handlebars to generate the UI. Handlebars is not included with the package. Rather, it loads it from CDNJS.
•this is just an initial version and doesn't do very much. There may be bugs and it may not handle all your routes or parameters. You can add an issue for a bug or feature request or send a pull reqest on the GitHub repo.
•right now it does need the WebApi Help page but later on, I'll remove that requirement.
•it doesn't do any kind of validation right now so you can easily put bad inputs that could cause unexpected bahavior on the client or server.

_____________________________ API menu button _______________________________
To add an API menu item on home page do the following:
1)In the global.asax file
	add the IsDebug bool
	    public class MvcApplication : System.Web.HttpApplication
		{
			//for razor to javascript debug 
			public static bool IsDebug
			{
				get
				{
	#if DEBUG
					return true;
	#else
					return false;
	#endif
				}
			}
	.........
2)in the Views/sfared/_Layout.cshtml file:
	add the debug deprndent <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>  action
     <ul class="nav navbar-nav">
	    <li>@Html.ActionLink("About", "About", "Home")</li>
        <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
        @if (Logqso.mvc.ui.MvcApplication.IsDebug == true)
        {
        <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>
        }


____________________________ Test API button___________________________________
If the 'Test API' button on the GET Controls page des noy appear
To get the 'Test API' button on webapi action page:
	1)copy  TestClientDialogs.cshtnl  into Area/HelpPage/View/Help/DisplayTemplates  from a previous project
	2)copy TestClientReferences.cshtml into Area/HelpPage/View/Help/DisplayTemplates  from a previous project
	3)Edit the Area/HelpPage/View/Help/Api.cshtml
	  in the <section class> comment out current code and add @Html.DisplayFor(m => Model)
	  after the last </div> comment out the @section scripts and replace with:
			@section Scripts {
				@Html.DisplayForModel("TestClientReferences")
				@*<link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />*@
			}
			------------------- code---------------
		<link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />
			<div id="body" class="help-page">
				<section class="featured">
					<div class="content-wrapper">
						<p>
							@Html.ActionLink("Help Page Home", "Index")
						</p>
					</div>
				</section>
				<section class="content-wrapper main-content clear-fix">
					@*@Html.DisplayForModel()*@
					@Html.DisplayFor(m => Model)

				</section>
			</div>
			@*@section scripts {
				<script type="text/javascript" src="/Scripts/WebApiTestClient.js"></script> }*@  

			@Html.DisplayForModel("TestClientDialogs")
			@section Scripts {
				@Html.DisplayForModel("TestClientReferences")
				@*<link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />*@
			}
			--------------------------- end of code------------------------
		4) edit the Area/HelpPage/View/Help/DisplayTemplates/TestClientDialogs.cshtnl
			change line 2, @using WebApiApp.Areas.HelpPage.Models
			to, @using Logqso.mvc.ui,Areas.HelpPage.Models,  where 'Logqso.mvc.ui' is the app name

