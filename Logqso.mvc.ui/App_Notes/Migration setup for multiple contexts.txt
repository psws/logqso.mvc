//So you have to run enable-migrations on each DbContext separately. And you have to specify a folder for each
 Configuration.cs file to be generated...
//http://stackoverflow.com/questions/21537558/multiple-db-contexts-in-the-same-db-and-application-in-ef-6-and-code-first-migra
//need to specify model directory for 2 or more contexts
/*Enable-Migrations -EnableAutomaticMigrations -ContextTypeName
NamespaceOfContext.ContextA -ProjectName ProjectContextIsInIfNotMainOne
-StartupProjectName NameOfMainProject  -ConnectionStringName ContextA */
_____________________________
PM>Enable-Migrations -ContextTypeName CustomerOrder.Models.CustomerOrderDB -MigrationsDirectory Migrations\CustomerOrderDB

PM>Enable-Migrations -ContextTypeName CustomerOrder.Models.ApplicationDbContext -MigrationsDirectory Migrations\ApplicationDbContext


//http://stackoverflow.com/questions/13469881/how-do-i-enable-ef-migrations-for-multiple-contexts-to-separate-databases
//For Migration
//To add migrations for each DbContext, you do it like this by specifying the fully qualified name of the Configuration class:
/*add-migration InitialBSchema -IgnoreChanges -ConfigurationTypeName
ConfigurationB -ProjectName ProjectContextIsInIfNotMainOne
-StartupProjectName NameOfMainProject  -ConnectionStringName ContextB */

//use to update migration model.
_____________________________________
//1st context
PM>Add-Migration -ConfigurationTypeName CustomerOrder.Migrations.ApplicationDbContext.Configuration "InitialDatabaseCreation" 
or
Add-Migration -ConfigurationTypeName CustomerOrder.Migrations.ApplicationDbContext.Configuration "InitialDatabaseCreation" 
or
Add-Migration -ConfigurationTypeName CustomerOrder.Migrations.ApplicationDbContext.Configuration "InitialDatabaseCreation" -ConnectionStringName "DefaultConnection"

//2nd context
//"callsign" is symbolic name for the migration
Add-Migration "callsign" -ConfigurationTypeName CustomerOrder.Migrations.CustomerOrderDB.Configuration -ConnectionStringName "CustomerOrderDB"
or 
Add-Migration  -ConfigurationTypeName CustomerOrder.Migrations.CustomerOrderDB.Configuration "callsign"



//Need to update Database when context migration is done
/*Update-Database -ConfigurationTypeName ConfigurationA -ProjectName
ProjectContextIsInIfNotMainOne -StartupProjectName NameOfMainProject
-ConnectionStringName ContextA */
__________________________________

Update-Database -ConfigurationTypeName CustomerOrder.Migrations.CustomerOrderDB.Configuration -Verbose -ConnectionStringName "CustomerOrderDB"
PM Output:
PM> Update-Database -ConfigurationTypeName CustomerOrder.Migrations.CustomerOrderDB.Configuration -Verbose -ConnectionStringName "CustomerOrderDB"
Using StartUp project 'CustomerOrder'.
Using NuGet project 'CustomerOrder'.
Specify the '-Verbose' flag to view the SQL statements being applied to the target database.
Target database is: 'CustomerOrderDB-20150417124247' (DataSource: PSS60\SQL2014, Provider: System.Data.SqlClient, Origin: Explicit).
Applying explicit migrations: [201504192107519_callsign].
Applying explicit migration: 201504192107519_callsign.
ALTER TABLE [dbo].[Customers] ADD [Callsign] [nvarchar](max)
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201504192107519_callsign', N'CustomerOrder.Models.CustomerOrderDB',  0x

Running Seed method.